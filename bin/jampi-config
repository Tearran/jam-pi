#!/bin/bash

clear

debug=1
directory="$(dirname "${BASH_SOURCE[0]}")"
cd $diectory
filename="$(basename "${BASH_SOURCE[0]}")"
lib_path="$directory/../lib/config"
sub_config="config"

declare -A category_descriptions
declare -A cli_options

populate_options() {

    options=(
	)

	cli_options=(
	    ["-h"]="Print this help."
	    ["-l"]="List available function"
	)

	categories=(
		$(ls "$lib_path")
	)

    for category in "${categories[@]}"; do
        config_file="$lib_path/$category/${sub_config}_${category}"
        if [[ -f "$config_file" ]]; then
            category_descriptions["$category"]=$(grep "^# @description" "$config_file" | sed 's/^# @description //')
            options+=("$category" "${category_descriptions[$category]}")
        fi
    done

}

get_choice() {
    local options=("$@")
    local choice

    if [[ $DISPLAY ]] && command -v zenity >/dev/null 2>&1; then
        choice=$(zenity --list --title="Categories" --column="Category" --column="Description" "${options[@]}")
    elif command -v whiptail >/dev/null 2>&1; then
        choice=$(whiptail --title "Categories" --menu "Choose a category:" 15 60 4 "${options[@]}" 3>&1 1>&2 2>&3)
    elif command -v dialog >/dev/null 2>&1; then
        choice=$(dialog --title "Categories" --menu "Choose a category:" 15 60 4 "${options[@]}" 3>&1 1>&2 2>&3)
    else
        echo "Neither whiptail nor dialog is installed" >&2
        exit 1
    fi

    echo "$choice"
}

handle_choice() {
    local choice=$(get_choice "${options[@]}")
    if [ -n "$choice" ]; then
        bash "$lib_path/$choice/${sub_config}_$choice"
        if [ "$debug" -eq 1 ]; then
            echo "Debug info:"
            echo "You chose category: $choice"
            echo "You chose file: ${sub_config}_$choice"
        fi
    else
        echo "No choice was made."
    fi
}

see_help() {
    echo -e "Usage: ${filename%.*} [options]"
    echo -e "  Options:"
    for option in "${!cli_options[@]}"; do
        echo -e "    $option, ${cli_options[$option]}"
    done
}


see_list(){

    echo -e "Usage: ${filename%.*} [options]"
    echo -e "  Options:"
    for option in "${!options[@]}"; do
        echo -e "    $option, ${options[$option]}"
    done

}

check_opts() {
    populate_options
    if [ "$1" == "-h" ]; then
        see_help
        see_list
    elif [ "$1" == "-l" ]; then
        see_list
    else
        handle_choice
    fi
}



check_opts $1