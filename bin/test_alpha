#!/bin/bash

# Copyright (c) Authors: http://www.armbian.com/authors, info@armbian.com
#
# This file is licensed under the terms of the GNU General Public
# License version 2. This program is licensed "as is" without any
# warranty of any kind, whether express or implied.

directory="$(dirname "${BASH_SOURCE[0]}")"
cd "$directory"
filename="$(basename "${BASH_SOURCE[0]}")"
libpath="$directory/../lib"

if [[ -d "$directory/../lib" ]]; then
    libpath="$directory"/../lib
else
    echo "Libraries not found"
    exit 0
fi

# shellcheck source=/dev/null
for file in "$libpath"/config/*/*.sh; do
    source "$file"
done

functionarray=()
funnamearray=()
group_name_array=()
descriptionarray=()

categories=($(ls -d "$libpath/config"/*))

declare -A functions

## Loop through each category
#for category in "${categories[@]}"; do
#    # Loop through each file in the category
#    for file in "$category"/*.sh; do
#
#        # Extract functions from the file
#        mapfile -t temp_functionarray < <(grep -oP '(?<=function\s)\w+::\w+' "$file")
#
#        # Loop through each function in the file
#        for function in "${temp_functionarray[@]}"; do
#            key="${category##*/}:${file##*/}:${function}"
#
#            functions["$key,function_name"]=$(echo "$function" | sed 's/.*:://')
#            functions["$key,group_name"]=$(echo "$function" | sed 's/::.*//')
#            functions["$key,description"]=$(grep -oP "(?<=# @description ).*" "$file")
#functions["$key,options"]=$(grep -oP "(?<=# @options ).*" "$file" | head -n 1)
#
#
#        done
#    done
#done

# ...

for category in "${categories[@]}"; do
    # Look for the category file in each category directory
    category_file="$category/category"
    if [[ -f "$category_file" ]]; then
        category_description=$(cat "$category_file")
        echo "Category Description: $category_description"
    else
        echo "Category Description not found for $category"
    fi

    # Loop through each file in the category
    for file in "$category"/*.sh; do
        # Extract functions from the file
        mapfile -t temp_functionarray < <(grep -oP '(?<=function\s)\w+::\w+' "$file")

        # Loop through each function in the file
        for function in "${temp_functionarray[@]}"; do
            key="${category##*/}:${file##*/}:${function}"

            functions["$key,function_name"]=$(echo "$function" | sed 's/.*:://')
            functions["$key,group_name"]=$(echo "$function" | sed 's/::.*//')
            functions["$key,description"]=$(grep -oP "(?<=# @description ).*" "$file")
            functions["$key,options"]=$(grep -oP "(?<=# @options ).*" "$file" | head -n 1)
        done
    done
done

# ...




debug() {
    echo
    # Loop through each category
    for category in "${categories[@]}"; do
        echo "Category:    ${category##*/}"

        # Loop through each file in the category
        for file in "$category"/*.sh; do
            echo "  File:    ${file##*/}"

            # Extract functions from the file
            mapfile -t functions_in_file < <(grep -oP '(?<=function\s)\w+::\w+' "$file")

            echo "    Functions:"
            # Loop through each function in the file
            for function in "${functions_in_file[@]}"; do
                key="${category##*/}:${file##*/}:${function}"
                echo "        Full Function Name: ${function}"
                echo "          Group Name: ${functions["$key,group_name"]}"
                echo "          Function Name: ${functions["$key,function_name"]}"
                echo "          Description: ${functions["$key,description"]}"
                echo "          Options: ${functions["$key,options"]}"
            done
        done
		echo
    done
	echo
}

debug

